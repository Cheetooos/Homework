#include <iostream>
#include <cmath>
using namespace std;

int main()
{
setlocale(0, "");
float p = 3.14;
float R, h, r, l;
cout « "R= ";
cin » R;
cout « "h = ";
cin » h;
cout « "r = ";
cin » r;
cout « "l = ";
cin » l;
float r1, R2;
r1 = pow(R, 2);
R2 = pow(r, 2);
cout « "S = " « p * (R1 + (R + r) * l + r1);
cout « "V = " « (p * h * (R1 + R * r + r1)) / 3 « "\n";

}



#using namespace std;
int main()
{
float x, y, z;
cout « "x = ";
cin » x;
cout « "y= ";
cin » y;
cout « "z = ";
cin » b;
if ((z <= y) || (z < x))
{
cout « "ERROR";
}
else
{
cout « "z = " « log(z - y) * sqrt(z - x);
}
}





int main() {
    setlocale(0, "")
    int n;
    cout << "Enter n: ";
    cin >> n;
    if (n <= 0) {
        cout << "n isn't natural figure." << endl;
        system("Pause");
        return 0;
    }
    for (int i = n; i < n + 10; i++) {
        if (i != n + 9) {
            cout << i << ", ";
        }
        else {
            cout << i << "." << endl;
        }
    }
    system("Pause");
    return 0;
}




#include <iostream>
#include <cstdlib>
#include <cmath>
using namespace std;
int main() {
    float x = -4;
    while (x <= 4.) {
        if (x != 1) {
            cout << "y(" << x << ") = " << (pow(x, 2) - 2 * x + 2) / (x - 1) << endl;
        }
        else {
            cout << "y(1) -cannot be divided by 0" << endl;
        }
        x += 0.5;
    }
    system("Pause");
    return 0;
}





#include <iostream>
#include <cmath>
#include <cstdlib>
using namespace std;


int main() {
    setlocale(0, "");
    double x, a;
    cout << "Enter x: ";
    cin >> x; // 0
    cout << "Enter a: ";
    cin >> a; // 1
    if (x < 1) {
        if (x == 0) {
            cout << "x cannot be equal by 0." << endl;
            system("Pause");
            return 0;
        }
        cout << "x < 1, w = " << a * log(abs(x)) << endl;
    }
    else {
        if (a - pow(x, 2) >= 0) {
            cout << "x >= 1, w = " << sqrt(a - pow(x, 2)) << endl;
        }
        else {
            cout << "sqrt of the negative figure!" << endl;
        }
    }
    system("Pause");
    return 0;
}
